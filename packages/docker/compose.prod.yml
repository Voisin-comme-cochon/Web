version: '3.8'

services:
  postgres:
    image: postgis/postgis:latest
    container_name: vcc_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  minio:
    container_name: vcc_minio
    restart: unless-stopped
    image: quay.io/minio/minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: 'server /data --console-address ":9001"'

  mongodb:
    image: mongo:latest
    container_name: vcc_mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE={MONGO_DB_NAME}
      - MONGO_INITDB_ROOT_USERNAME={MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD={MONGO_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: vcc_backend
    ports:
      - "3002:3000"
    depends_on:
      - postgres
      - mongodb
      - minio

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: vcc_frontend
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  postgres_data:
  mongo_data:
  minio_data: